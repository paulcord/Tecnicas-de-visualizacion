shiny::runApp()
# Shiny 01
library(shiny)
shinyApp(ui, server) # pegar los parametros ui y server
# Shiny 01 - DESDE CERO
library(shiny)
# ui =User interface
ui <- shinyUI(
fluidPage(
titlePanel('Primer shiny') #Title panel no tiene hijos- no enter / (solo hermanos - se usa coma)
)
server <- function(input, output) { #input formulas / output graficas
}
shinyApp(ui, server) # pegar los parametros ui y server
runApp('Shiny 01 Ejemplo clase.R')
library(ggplot2)
runApp('Shiny 01 Ejemplo clase.R')
# 1) Vector
myvector <- c(1,2,3)
str(myvector)
# 2) Puedes hacer un vector vacÃ­o
numeric(100)
character(100)
integer(100)
# Que pasa con los vectores
c('Alejandro', 10) #Hace una conversion implicita
# 2) Lista
list()# Pueden convinar elementos
list(1)
list(nota=0.9, nombre='Ale')
mylistarara <- list(nota=0.9, nombre='Ale', 'Me aburro')
mylistarara$nombre
mylistarara$nota
mylistarara[(3)]
mylistarara[(2)]
mylistarara[(1)]
names(mylistarara)
lista(a=list(1,2), b=3, c='a')
list(a=list(1,2), b=3, c='a')
$`a`
nueva$a[[1]]
# Todod en R es un vector!!
nueva <- list(a=list(1,2), b=3, c='a')
nueva$a[[1]]
mylistarara$nombre
mylistarara['nombre']
str(mylistarara['nombre'])
str(mylistarara$nombre )
# 4) Dataframe
data.frame(hola=c(1,2), chao=c(3,4))
# 6) Factores
c('h', ' m', 'h', ' m','h', ' m','h', ' m','h', ' m')
str(sexo)
# 6) Factores
sexo<-c('h', ' m', 'h', ' m', 'h', ' m', 'h', ' m', 'h', ' m')
str(sexo)
as.factor(sexo)
sexofactor
sexofactor <- as.factor(sexo)
sexofactor
as.integer(sexofactor)
runApp('Shiny 01 Ejemplo clase.R')
library(ggplot2)
ggplot(mtcars)
ggplot(mtcars, aes(x= mpg, y=hp)) + geom_point()
runApp('Shiny 01 Ejemplo clase.R')
install.packages('plotly')
library(plotly)
install.packages("plotly")
library(plotly)
runApp('Shiny 01 Ejemplo clase.R')
ggplotly(ggplot(mtcars, aes_string(x = input$variable, y = 'hp')) + geom_point())
ggplotly(ggplot(mtcars, aes_string(x = mpg, y = 'hp')) + geom_point())
